<?xml version="1.0" encoding="UTF-8"?>
<project name="site" basedir="."
    xmlns:artifact="antlib:org.apache.maven.artifact.ant"
    xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors">
    
    <!-- import the ant / maven integration tasks -->
    <path id="maven-ant-tasks.classpath" path="../lib/maven-ant-tasks-2.1.3.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
    
    <property name="project.root" location="../../"/>
    <property name="project.name" value="site" />
    
	<!-- See the following URL for a description of this property file strategy -->
	<!-- The only difference is we prepend a . for the home directory property files -->
	<!-- http://www.javaranch.com/ant/properties.jsp -->
	<property file="${user.home}/.${project.name}.properties"/>
    <property file="${user.home}/.build.properties"/>
    <property name="config.filename" value="${user.name}.properties"/>
    <property file="config/${config.filename}"/>
    <property file="../build.properties"/>
	
	<property name="runtime.environment" value="development"/>
	
    <target name="tomcat-no-db">
        <delete dir="war/WEB-INF/lib"/>
        <artifact:mvn mavenHome="${maven.home}" fork="true">
            <jvmarg value="-XX:MaxPermSize=256M" />
            <jvmarg value="-Xmx512M" />
            <jvmarg value="-Xdebug" />
        	<jvmarg value="-Dmaven.multiModuleProjectDirectory=${maven.home}" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n" />
        	<jvmarg value="-javaagent:${spring.instrument.path}" />
        	<jvmarg value="-Druntime.environment=${runtime.environment}" />
            <arg value="compile"/>
            <arg value="war:exploded"/>
            <arg value="tomcat7:run"/>
        </artifact:mvn>
    </target>

    <target name="tomcat" depends="start-db">
        <delete dir="war/WEB-INF/lib"/>
        <artifact:mvn mavenHome="${maven.home}" fork="true">
            <jvmarg value="-XX:MaxPermSize=256M" />
            <jvmarg value="-Xmx512M" />
            <jvmarg value="-Xdebug" />
        	<jvmarg value="-Dmaven.multiModuleProjectDirectory=${maven.home}" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n" />
            <jvmarg value="-javaagent:${spring.instrument.path}" />
            <jvmarg value="-Druntime.environment=${runtime.environment}" />
            <jvmarg value="-Ddatabase.user=${database.user}" />  
            <jvmarg value="-Ddatabase.password=${database.password}" />  
            <jvmarg value="-Ddatabase.driver=${database.driver}" />  
            <jvmarg value="-Ddatabase.url=${database.url}" />  
            <arg value="compile"/>
            <arg value="war:exploded"/>
            <arg value="tomcat7:run"/>
        </artifact:mvn>
    </target>

    <target name="tomcat-jrebel" depends="start-db">
        <delete dir="war/WEB-INF/lib"/>
        <artifact:mvn mavenHome="${maven.home}" fork="true">
            <jvmarg value="-XX:MaxPermSize=256M" />
            <jvmarg value="-Xmx1024M" />
            <jvmarg value="-Xdebug" />
        	<jvmarg value="-Dmaven.multiModuleProjectDirectory=${maven.home}" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n" />
            <jvmarg value="-Drebel.root=${project.root}" />
            <jvmarg value="-noverify" />
            <jvmarg value="-Drebel.check_class_hash=true" />
            <jvmarg value="-agentpath:${jrebel.path}" />
            <jvmarg value="-javaagent:${spring.instrument.path}" />
            <jvmarg value="-Druntime.environment=${runtime.environment}" />  
            <jvmarg value="-Ddatabase.user=${database.user}" />  
            <jvmarg value="-Ddatabase.password=${database.password}" />  
            <jvmarg value="-Ddatabase.driver=${database.driver}" />  
            <jvmarg value="-Ddatabase.url=${database.url}" />
            <arg value="compile"/>
            <arg value="war:exploded"/>
            <arg value="tomcat7:run"/>
        </artifact:mvn>
    </target>

	
    <target name="tomcat-stop">
        <artifact:mvn mavenHome="${maven.home}" fork="true">
            <jvmarg value="-XX:MaxPermSize=256M" />
            <jvmarg value="-Xmx128M" />
        	<jvmarg value="-Dmaven.multiModuleProjectDirectory=${maven.home}" />
            <arg value="tomcat7:shutdown"/>
        </artifact:mvn>
    </target>
	
	<target name="stop-all" depends="tomcat-stop, stop-db"/>
    
    <target name="start-db">
        <!-- Grab the HSQLDB jar and add it to the classpath -->
        <artifact:dependencies filesetId="hsql">
            <dependency groupId="org.hsqldb" artifactId="hsqldb" version="2.3.1" />
        </artifact:dependencies>
        <path id="build.runtime.classpath">
            <fileset refid="hsql"/>
        </path>

        <echo message="Starting Data Base..." />
        <java fork="true"  spawn="true" classname="org.hsqldb.Server" classpathref="build.runtime.classpath">
            <arg  line="-database.0 file:data/broadleaf -dbname.0 broadleaf"/>
        </java>
    </target>

    <target name="stop-db">
        <echo message="Execute SQL on new Data Base..." />
    	<!-- Grab the HSQLDB jar and add it to the classpath -->
        <artifact:dependencies filesetId="warDeps">
            <dependency groupId="org.hsqldb" artifactId="hsqldb" version="2.3.1" />
        </artifact:dependencies>
        <path id="build.runtime.classpath">
            <fileset refid="warDeps"/>
        </path>
        <sql
            autocommit="true"
            print="true"
            classpathref="build.runtime.classpath"
            driver="org.hsqldb.jdbcDriver"
            url="jdbc:hsqldb:hsql://localhost/broadleaf;ifexists=true"
            userid="sa"
            password="">
            <transaction>SHUTDOWN</transaction>
        </sql>
        <echo message="SQL Executed on data base..." />
    </target>

</project>
